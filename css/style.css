/*********************************/
/* HEADER */
/*********************************/

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  background-color: #fdf2e9;

  /* Adding a height to make this navigation sticky/fixed later when scrolling down the website */
  height: 9.6rem;
  padding: 0 4.8rem;
}

.logo {
  height: 2.2rem;
}

/*********************************/
/* NAGIVATION */
/*********************************/

.main-nav-list {
  list-style: none;
  display: flex;
  align-items: center;
  gap: 3.2rem;
}

.main-nav-link:link,
.main-nav-link:visited {
  display: inline-block;
  text-decoration: none;
  color: #333;
  font-weight: 500;
  font-size: 1.8rem;
  transition: all 0.3s;
}

.main-nav-link:hover,
.main-nav-link:active {
  color: #cf711f;
}

/* To make sure this always applies when it contains both classes of .main-nav.link and nav-cta, now the end selector specificity is updated to 0,3,0
priority*/
.main-nav-link.nav-cta:link,
.main-nav-link.nav-cta:visited {
  padding: 1.2rem 2.4rem;
  border-radius: 9px;
  color: #fff;
  background-color: #e67e22;
}

.main-nav-link.nav-cta:hover,
.main-nav-link.nav-cta:active {
  background-color: #cf711f;
}

/*********************************/
/* HERO SECTION */
/*********************************/
.section-hero {
  background-color: #fdf2e9;

  /* When we have background color, always use padding. Helps preserve the background color */
  padding: 4.8rem 0 9.6rem 0;
}

.hero {
  max-width: 130rem;
  /* to center it to the view port, using the margin 0 auto trick */
  margin: 0 auto;
  padding: 0 3.2rem;
  display: grid;
  grid-template-columns: 1fr 1fr;
  /* making the gao the same as the padding top and bottom for consistency */
  gap: 9.6rem;
  /* center the items vertically. vertical center */
  align-items: center;
}

.hero-description {
  font-size: 2rem;
  line-height: 1.5;
  margin-bottom: 4.8rem;
}

/* since its a link and not a button, always style the link and visited at the same time */

.hero-img {
  /* this will fill the entire container.
  it is now a flexible image */
  width: 100%;
}

.delivered-meals {
  display: flex;
  align-items: center;
  gap: 1.6rem;
  margin-top: 8rem;
}

.delivered-imgs {
  display: flex;
}

.delivered-imgs img {
  height: 4.8rem;
  width: 4.8rem;
  border-radius: 50%;
  /* TRICK: this will pull all the images to the left
  which will make the right image go on top of the left image. */
  margin-right: -1.6rem;
  border: 3px solid #fdf2e9;
}

.delivered-imgs img:last-child {
  margin: 0;
}

.delivered-text {
  font-size: 1.8rem;
  font-weight: 600;
}

/* Instead of adding a class, just use a decendent seudo class */
.delivered-text span {
  color: #cf711f;
  font-weight: 700;
}

/*********************************/
/* FEATURED IN SECTION*/
/*********************************/

.section-featured {
  padding: 4.8rem 0 3.2rem 0;
}

.heading-featured-in {
  font-size: 1.4rem;
  text-transform: uppercase;
  letter-spacing: 0.75px;
  font-weight: 500;
  text-align: center;
  margin-bottom: 2.4rem;
  color: #999;
}

.logos {
  display: flex;
  /* justify-content: space-between can be used but instead currently using space-around
  as it adds spacing block in the begining of the first logo and at the end of the last logo*/
  justify-content: space-around;
}

.logos img {
  /* Using height to style them instead of width because it appears more natural */
  height: 3.2rem;

  /* for graysacle() use values between 0 - 1 or 0% - 100% */
  /* filter: grayscale(100%); */

  filter: brightness(0);
  opacity: 50%;
}

/*********************************/
/* HOW IT WORKS SECTION*/
/*********************************/
.section-how {
  padding: 9.6rem 0;
  /* background-color: violet; */
}

.step-number {
  font-size: 8.6rem;
  font-weight: 600;
  color: #ddd;
  margin-bottom: 1.2rem;
}

.step-description {
  font-size: 1.8rem;
  line-height: 1.8;
}

.step-img-box {
  position: relative;

  display: flex;
  align-items: center;
  justify-content: center;
}

/* Instead of creating another div inside, I just used a seudo */
.step-img-box::before,
.step-img-box::after {
  content: "";
  display: block;

  border-radius: 50%;

  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.step-img-box::before {
  width: 60%;
  /* height: 60%; */

  /* 60% of parent's width */
  padding-bottom: 60%;
  background-color: #fdf2e9;
  z-index: -2;
}

.step-img-box::after {
  width: 45%;
  padding-bottom: 45%;
  background-color: #fae5d3;
  z-index: -1;
}

.step-img {
  width: 35%;
}

/*********************************/
/* MEALS SECTION*/
/*********************************/

.section-meals {
  padding: 9.6rem 0;
}

.meal {
  box-shadow: 0 2.4rem 4.8rem rgba(0, 0, 0, 0.075);
  border-radius: 11px;
  /* VERY IMPORTANT PROPERTY! Makes the image above the container below sync together, so now the image has rounded corners */
  overflow: hidden;
  /* Adding the padding here would not make the UI design look good.
  Created a new div for the content. Named it .meal-content and added the padding
  just below. Now it looks amazing */
  /* padding: 4.8rem; */

  /* Adds animation */
  transition: all 0.4s;
}

.meal:hover {
  transform: translateY(-1.2rem);
  /* To add animation, the transition keyword needs to be added to the original state of .meals */

  /* Adds shadow while in transition */
  box-shadow: 0 3.2rem 6.4rem rgba(0, 0, 0, 0.06);
}

.meal-content {
  padding: 3.2rem 4.8rem 4.8rem 4.8rem;
}

.meal-tags {
  margin-bottom: 1.2rem;
  display: flex;
  gap: 0.4rem;
}

.tag {
  display: inline-block;
  padding: 0.4rem 0.8rem;
  font-size: 1.2rem;
  text-transform: uppercase;

  color: #333;
  /* we cant use 50% here but we can just use a very large value like 100px */
  border-radius: 100px;
  font-weight: 600;
}

.tag--vegetarian {
  background-color: #51cf66;
}
.tag--vegan {
  background-color: #94d82d;
}
.tag--paleo {
  background-color: #ffd43b;
}

.meal-title {
  font-size: 2.4rem;
  color: #333;
  font-weight: 600;
  margin-bottom: 3.2rem;
}

.meal-attributes {
  list-style: none;
  /* Going to create a flexbox and set the direction to column.
  Now the gap will be vertical instead of horizontal. no longer using
  default of horizontal gap */
  display: flex;
  flex-direction: column;
  gap: 2rem;
}

.meal-attribute {
  font-size: 1.8rem;
  display: flex;
  align-items: center;
  gap: 1.6rem;
}

.meal-icon {
  height: 2.4rem;
  width: 2.4rem;
  color: #e67e22;
}

.meal-img {
  width: 100%;
}

.all-recipes {
  text-align: center;
  font-size: 1.8rem;
}

/*********************************/
/* TESTIMONIAL SECTION */
/*********************************/

.section-testimonials {
  background-color: #fdf2e9;
  display: grid;
  grid-template-columns: 55fr 45fr;
  align-items: center;
}

.testimonials-container {
  padding: 9.6rem;
}

/* Creating a new grid as the reusable one is more for the page layout
with differetn spacing */
.testimonials {
  display: grid;
  grid-template-columns: 1fr 1fr;
  row-gap: 4.8rem;
  column-gap: 8rem;
}

.testimonial-img {
  /* Making fixed width images */
  width: 6.4rem;
  border-radius: 50%;
  margin-bottom: 1.2rem;
}

.testimonial-text {
  font-size: 1.8rem;
  line-height: 1.8;
  margin-bottom: 1.6rem;
}

.testimonial-name {
  font-size: 1.6rem;
  color: #6f6f6f;
}

.gallery {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 1.6rem;
  padding: 1.6rem;
}

/* THIS IS IMPORTANT! Prevents the images from scaling/overflowing 
outside their parent element.  */
.gallery-item {
  overflow: hidden;
}

.gallery-item img {
  display: block;
  width: 100%;
  transition: all 0.4s;
}

.gallery-item img:hover {
  transform: scale(1.1);
}

/*********************************/
/* PRICING SECTION*/
/*********************************/

.section-pricing {
  padding: 9.6rem 0;
}

.pricing-plan {
  /* background-color: #fdf2e9; */
  border-radius: 11px;
  /* This padding has 2 extra pixels for the starter plan since adding the
  2px solid border. So to compensate, its been added to the .pricing-plan-starter
  and the pricing-plan--complete */
  /* padding: 4.8rem; */
  width: 75%;
}

.pricing-plan--starter {
  /* Use justify-self when you want to move one specific grid element/item.
  Place it in element you'd like to move. Moved this element to the end to fill in the
  middle space */
  justify-self: end;
  border: 2px solid #fdf2e9;
  padding: 4.6rem;
}

.pricing-plan--complete {
  background-color: #fdf2e9;
  padding: 4.8rem;
  position: relative;
  overflow: hidden;
}

/* Adding Best Value to the complete meal plan */
.pricing-plan--complete::after {
  content: "Best value";
  position: absolute;
  top: 6%;
  right: -18%;

  text-transform: uppercase;
  font-size: 1.4rem;
  font-weight: 700;
  color: #333;
  background: #ffd43b;
  padding: 0.8rem 8rem;
  transform: rotate(45deg);
}

.plan-header {
  text-align: center;
  margin-bottom: 4.8rem;
}

.plan-name {
  color: #cf711f;
  font-weight: 600;
  font-size: 2rem;
  text-transform: uppercase;
  letter-spacing: 0.75;
  margin-bottom: 3.2rem;
}

.plan-price {
  font-size: 6.2rem;
  font-weight: 600;
  color: #333;
  margin-bottom: 1.6rem;
}

.plan-price span {
  font-size: 3rem;
  font-weight: 500;
  margin-right: 0.8rem;
}

.plan-text {
  font-size: 1.6rem;
  line-height: 1.6;
  color: #6f6f6f;
}

.plan-sign-up {
  text-align: center;
  margin-top: 4.8rem;
}
